/**Auto-generated by: https://github.com/angular-threejs/gltf
Command: npx angular-three-gltf&#64;1.0.5 public/67219b35aa658e812daccbd7.glb -o src/app/experience/avatar.ts --selector avatar --transform
**/

import {
  ChangeDetectionStrategy,
  Component,
  CUSTOM_ELEMENTS_SCHEMA,
  effect,
  ElementRef,
  inject,
  input,
  Signal,
  viewChild,
} from '@angular/core';
import { extend, NgtArgs, NgtGroup, NgtObjectEvents } from 'angular-three';
import { injectGLTF } from 'angular-three-soba/loaders';
import type * as THREE from 'three';
import { Group, SkinnedMesh } from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Headwear: THREE.SkinnedMesh;
    Wolf3D_Body: THREE.SkinnedMesh;
    Wolf3D_Outfit_Bottom: THREE.SkinnedMesh;
    Wolf3D_Outfit_Footwear: THREE.SkinnedMesh;
    Wolf3D_Outfit_Top: THREE.SkinnedMesh;
    EyeLeft: THREE.SkinnedMesh;
    EyeRight: THREE.SkinnedMesh;
    Wolf3D_Head: THREE.SkinnedMesh;
    Wolf3D_Teeth: THREE.SkinnedMesh;
    Hips: THREE.Bone;
  };
  materials: {
    Wolf3D_Headwear: THREE.MeshStandardMaterial;
    Wolf3D_Body: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Bottom: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Footwear: THREE.MeshStandardMaterial;
    Wolf3D_Outfit_Top: THREE.MeshStandardMaterial;
    Wolf3D_Eye: THREE.MeshStandardMaterial;
    Wolf3D_Skin: THREE.MeshStandardMaterial;
    Wolf3D_Teeth: THREE.MeshStandardMaterial;
  };
};

@Component({
  selector: 'app-avatar',
  standalone: true,
  template: `
    @if (gltf(); as gltf) {
      <ngt-group #model [parameters]="options()">
        <ngt-primitive *args="[gltf.nodes.Hips]" />
        <ngt-skinned-mesh
          [geometry]="gltf.nodes.Wolf3D_Headwear.geometry"
          [material]="gltf.materials.Wolf3D_Headwear"
          [skeleton]="gltf.nodes.Wolf3D_Headwear.skeleton"
        />
        <ngt-skinned-mesh
          [geometry]="gltf.nodes.Wolf3D_Body.geometry"
          [material]="gltf.materials.Wolf3D_Body"
          [skeleton]="gltf.nodes.Wolf3D_Body.skeleton"
        />
        <ngt-skinned-mesh
          [geometry]="gltf.nodes.Wolf3D_Outfit_Bottom.geometry"
          [material]="gltf.materials.Wolf3D_Outfit_Bottom"
          [skeleton]="gltf.nodes.Wolf3D_Outfit_Bottom.skeleton"
        />
        <ngt-skinned-mesh
          [geometry]="gltf.nodes.Wolf3D_Outfit_Footwear.geometry"
          [material]="gltf.materials.Wolf3D_Outfit_Footwear"
          [skeleton]="gltf.nodes.Wolf3D_Outfit_Footwear.skeleton"
        />
        <ngt-skinned-mesh
          [geometry]="gltf.nodes.Wolf3D_Outfit_Top.geometry"
          [material]="gltf.materials.Wolf3D_Outfit_Top"
          [skeleton]="gltf.nodes.Wolf3D_Outfit_Top.skeleton"
        />
        <ngt-skinned-mesh
          name="EyeLeft"
          [geometry]="gltf.nodes.EyeLeft.geometry"
          [material]="gltf.materials.Wolf3D_Eye"
          [skeleton]="gltf.nodes.EyeLeft.skeleton"
          [morphTargetDictionary]="gltf.nodes.EyeLeft.morphTargetDictionary"
          [morphTargetInfluences]="gltf.nodes.EyeLeft.morphTargetInfluences"
        />
        <ngt-skinned-mesh
          name="EyeRight"
          [geometry]="gltf.nodes.EyeRight.geometry"
          [material]="gltf.materials.Wolf3D_Eye"
          [skeleton]="gltf.nodes.EyeRight.skeleton"
          [morphTargetDictionary]="gltf.nodes.EyeRight.morphTargetDictionary"
          [morphTargetInfluences]="gltf.nodes.EyeRight.morphTargetInfluences"
        />
        <ngt-skinned-mesh
          name="Wolf3D_Head"
          [geometry]="gltf.nodes.Wolf3D_Head.geometry"
          [material]="gltf.materials.Wolf3D_Skin"
          [skeleton]="gltf.nodes.Wolf3D_Head.skeleton"
          [morphTargetDictionary]="gltf.nodes.Wolf3D_Head.morphTargetDictionary"
          [morphTargetInfluences]="gltf.nodes.Wolf3D_Head.morphTargetInfluences"
        />
        <ngt-skinned-mesh
          name="Wolf3D_Teeth"
          [geometry]="gltf.nodes.Wolf3D_Teeth.geometry"
          [material]="gltf.materials.Wolf3D_Teeth"
          [skeleton]="gltf.nodes.Wolf3D_Teeth.skeleton"
          [morphTargetDictionary]="gltf.nodes.Wolf3D_Teeth.morphTargetDictionary"
          [morphTargetInfluences]="gltf.nodes.Wolf3D_Teeth.morphTargetInfluences"
        />

        <ng-content />
      </ngt-group>
    }
  `,
  imports: [NgtArgs],
  hostDirectives: [
    {
      directive: NgtObjectEvents,
      inputs: ['ngtObjectEvents'],
      outputs: [
        'click',
        'dblclick',
        'contextmenu',
        'pointerup',
        'pointerdown',
        'pointerover',
        'pointerout',
        'pointerenter',
        'pointerleave',
        'pointermove',
        'pointermissed',
        'pointercancel',
        'wheel',
      ],
    },
  ],
  schemas: [CUSTOM_ELEMENTS_SCHEMA],
  changeDetection: ChangeDetectionStrategy.OnPush,
})
export class Avatar {
  protected readonly Math = Math;

  options = input({} as Partial<NgtGroup>);

  modelRef = viewChild<ElementRef<Group>>('model');

  protected gltf = injectGLTF(() => '/67219b35aa658e812daccbd7-transformed.glb', {
    useDraco: true,
  }) as unknown as Signal<GLTFResult | null>;

  private objectEvents = inject(NgtObjectEvents, { host: true });

  constructor() {
    extend({ Group, SkinnedMesh });

    effect(
      () => {
        const modelRef = this.modelRef()?.nativeElement;
        if (!modelRef) return;

        this.objectEvents.ngtObjectEvents.set(modelRef);
      },
      { allowSignalWrites: true },
    );
  }
}
